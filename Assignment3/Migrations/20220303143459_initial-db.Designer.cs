// <auto-generated />
using Assignment3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment3.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20220303143459_initial-db")]
    partial class initialdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment3.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PictureURL")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("CharacterId");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            Alias = "Batman",
                            FullName = "Bruce Wayne",
                            Gender = "Male",
                            PictureURL = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxoj82YZjdwDq_XKN6mcpokrHJzmxFSAUQVA&usqp=CAU"
                        },
                        new
                        {
                            CharacterId = 2,
                            Alias = "Spiderman",
                            FullName = "Peter Parker",
                            Gender = "Male",
                            PictureURL = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS0-SrO0HUDdewPLFtQjygeTk1RczLQXr1lnw&usqp=CAU"
                        },
                        new
                        {
                            CharacterId = 3,
                            Alias = "Superman",
                            FullName = "Clark Kent",
                            Gender = "Male",
                            PictureURL = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSs3QOXYB0b--1-moUgZ9r9V1F998VgGwnJJw&usqp=CAU"
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Franchise", b =>
                {
                    b.Property<int>("FranchiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FranchiseId");

                    b.ToTable("Franchise");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            Description = "Warner Brothers Entertainment, Inc. provides video based entertainment services. The Company produces feature films, television programs, home video and DVDs, animation, interactive entertainment, and games, as well as publishes comic books. Warner Brothers Entertainment serves customers worldwide.",
                            Name = "Warners Bros"
                        },
                        new
                        {
                            FranchiseId = 2,
                            Description = "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe centered on a series of superhero films produced by Marvel Studios.",
                            Name = "MCU"
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MovieTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureURL")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("TrailerURL")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("MovieId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Director = "Matt Reeves",
                            FranchiseId = 1,
                            Genre = "Action",
                            MovieTitle = "Batman",
                            PictureURL = "https://m.media-amazon.com/images/M/MV5BYTExZTdhY2ItNGQ1YS00NjJlLWIxMjYtZTI1MzNlMzY0OTk4XkEyXkFqcGde",
                            ReleaseYear = 2022,
                            TrailerURL = "https://www.youtube.com/watch?v=mqqft2x_Aa4"
                        },
                        new
                        {
                            MovieId = 2,
                            Director = "Jon Watts",
                            FranchiseId = 2,
                            Genre = "Action",
                            MovieTitle = "Spiderman",
                            PictureURL = "https://www.luxorvenray.nl/uploads/Products/product_907/SpiderManNoWayHome_132835211289696784_big.jpg",
                            ReleaseYear = 2022,
                            TrailerURL = "https://www.youtube.com/watch?v=JfVOs4VSpmA"
                        },
                        new
                        {
                            MovieId = 3,
                            Director = "Zack Snyder",
                            FranchiseId = 1,
                            Genre = "Action",
                            MovieTitle = "Superman",
                            PictureURL = "https://m.media-amazon.com/images/I/51OrrZRXTvL._AC_.jpg",
                            ReleaseYear = 2022,
                            TrailerURL = "https://www.youtube.com/watch?v=T6DJcgm3wNY"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("CharacterMovie");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            CharacterId = 3,
                            MovieId = 3
                        },
                        new
                        {
                            CharacterId = 3,
                            MovieId = 1
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Movie", b =>
                {
                    b.HasOne("Assignment3.Models.Franchise", "Franchise")
                        .WithMany("Movie")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("Assignment3.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment3.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment3.Models.Franchise", b =>
                {
                    b.Navigation("Movie");
                });
#pragma warning restore 612, 618
        }
    }
}
